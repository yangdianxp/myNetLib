// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: external.proto

#ifndef PROTOBUF_INCLUDED_external_2eproto
#define PROTOBUF_INCLUDED_external_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_external_2eproto 

namespace protobuf_external_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_external_2eproto
namespace pb {
namespace external {
class info;
class infoDefaultTypeInternal;
extern infoDefaultTypeInternal _info_default_instance_;
class modify_channel;
class modify_channelDefaultTypeInternal;
extern modify_channelDefaultTypeInternal _modify_channel_default_instance_;
}  // namespace external
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::external::info* Arena::CreateMaybeMessage<::pb::external::info>(Arena*);
template<> ::pb::external::modify_channel* Arena::CreateMaybeMessage<::pb::external::modify_channel>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {
namespace external {

enum modify_channel_rslt_type {
  modify_channel_rslt_type_rslt_none = 0,
  modify_channel_rslt_type_rslt_succ = 1,
  modify_channel_rslt_type_rslt_fail = 2,
  modify_channel_rslt_type_rslt_already_exist = 3,
  modify_channel_rslt_type_rslt_not_exist = 4,
  modify_channel_rslt_type_modify_channel_rslt_type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  modify_channel_rslt_type_modify_channel_rslt_type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool modify_channel_rslt_type_IsValid(int value);
const modify_channel_rslt_type modify_channel_rslt_type_rslt_type_MIN = modify_channel_rslt_type_rslt_none;
const modify_channel_rslt_type modify_channel_rslt_type_rslt_type_MAX = modify_channel_rslt_type_rslt_not_exist;
const int modify_channel_rslt_type_rslt_type_ARRAYSIZE = modify_channel_rslt_type_rslt_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* modify_channel_rslt_type_descriptor();
inline const ::std::string& modify_channel_rslt_type_Name(modify_channel_rslt_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    modify_channel_rslt_type_descriptor(), value);
}
inline bool modify_channel_rslt_type_Parse(
    const ::std::string& name, modify_channel_rslt_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<modify_channel_rslt_type>(
    modify_channel_rslt_type_descriptor(), name, value);
}
// ===================================================================

class modify_channel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.external.modify_channel) */ {
 public:
  modify_channel();
  virtual ~modify_channel();

  modify_channel(const modify_channel& from);

  inline modify_channel& operator=(const modify_channel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  modify_channel(modify_channel&& from) noexcept
    : modify_channel() {
    *this = ::std::move(from);
  }

  inline modify_channel& operator=(modify_channel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const modify_channel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const modify_channel* internal_default_instance() {
    return reinterpret_cast<const modify_channel*>(
               &_modify_channel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(modify_channel* other);
  friend void swap(modify_channel& a, modify_channel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline modify_channel* New() const final {
    return CreateMaybeMessage<modify_channel>(NULL);
  }

  modify_channel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<modify_channel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const modify_channel& from);
  void MergeFrom(const modify_channel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(modify_channel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef modify_channel_rslt_type rslt_type;
  static const rslt_type rslt_none =
    modify_channel_rslt_type_rslt_none;
  static const rslt_type rslt_succ =
    modify_channel_rslt_type_rslt_succ;
  static const rslt_type rslt_fail =
    modify_channel_rslt_type_rslt_fail;
  static const rslt_type rslt_already_exist =
    modify_channel_rslt_type_rslt_already_exist;
  static const rslt_type rslt_not_exist =
    modify_channel_rslt_type_rslt_not_exist;
  static inline bool rslt_type_IsValid(int value) {
    return modify_channel_rslt_type_IsValid(value);
  }
  static const rslt_type rslt_type_MIN =
    modify_channel_rslt_type_rslt_type_MIN;
  static const rslt_type rslt_type_MAX =
    modify_channel_rslt_type_rslt_type_MAX;
  static const int rslt_type_ARRAYSIZE =
    modify_channel_rslt_type_rslt_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  rslt_type_descriptor() {
    return modify_channel_rslt_type_descriptor();
  }
  static inline const ::std::string& rslt_type_Name(rslt_type value) {
    return modify_channel_rslt_type_Name(value);
  }
  static inline bool rslt_type_Parse(const ::std::string& name,
      rslt_type* value) {
    return modify_channel_rslt_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 tid = 2;
  void clear_tid();
  static const int kTidFieldNumber = 2;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // int32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // int32 vid = 4;
  void clear_vid();
  static const int kVidFieldNumber = 4;
  ::google::protobuf::int32 vid() const;
  void set_vid(::google::protobuf::int32 value);

  // int32 src = 5;
  void clear_src();
  static const int kSrcFieldNumber = 5;
  ::google::protobuf::int32 src() const;
  void set_src(::google::protobuf::int32 value);

  // int32 dst = 6;
  void clear_dst();
  static const int kDstFieldNumber = 6;
  ::google::protobuf::int32 dst() const;
  void set_dst(::google::protobuf::int32 value);

  // int32 rslt = 7;
  void clear_rslt();
  static const int kRsltFieldNumber = 7;
  ::google::protobuf::int32 rslt() const;
  void set_rslt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.external.modify_channel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 vid_;
  ::google::protobuf::int32 src_;
  ::google::protobuf::int32 dst_;
  ::google::protobuf::int32 rslt_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_external_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.external.info) */ {
 public:
  info();
  virtual ~info();

  info(const info& from);

  inline info& operator=(const info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  info(info&& from) noexcept
    : info() {
    *this = ::std::move(from);
  }

  inline info& operator=(info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const info* internal_default_instance() {
    return reinterpret_cast<const info*>(
               &_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(info* other);
  friend void swap(info& a, info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline info* New() const final {
    return CreateMaybeMessage<info>(NULL);
  }

  info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const info& from);
  void MergeFrom(const info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:pb.external.info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_external_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// modify_channel

// int32 type = 1;
inline void modify_channel::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 modify_channel::type() const {
  // @@protoc_insertion_point(field_get:pb.external.modify_channel.type)
  return type_;
}
inline void modify_channel::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.external.modify_channel.type)
}

// int32 tid = 2;
inline void modify_channel::clear_tid() {
  tid_ = 0;
}
inline ::google::protobuf::int32 modify_channel::tid() const {
  // @@protoc_insertion_point(field_get:pb.external.modify_channel.tid)
  return tid_;
}
inline void modify_channel::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:pb.external.modify_channel.tid)
}

// int32 uid = 3;
inline void modify_channel::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 modify_channel::uid() const {
  // @@protoc_insertion_point(field_get:pb.external.modify_channel.uid)
  return uid_;
}
inline void modify_channel::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:pb.external.modify_channel.uid)
}

// int32 vid = 4;
inline void modify_channel::clear_vid() {
  vid_ = 0;
}
inline ::google::protobuf::int32 modify_channel::vid() const {
  // @@protoc_insertion_point(field_get:pb.external.modify_channel.vid)
  return vid_;
}
inline void modify_channel::set_vid(::google::protobuf::int32 value) {
  
  vid_ = value;
  // @@protoc_insertion_point(field_set:pb.external.modify_channel.vid)
}

// int32 src = 5;
inline void modify_channel::clear_src() {
  src_ = 0;
}
inline ::google::protobuf::int32 modify_channel::src() const {
  // @@protoc_insertion_point(field_get:pb.external.modify_channel.src)
  return src_;
}
inline void modify_channel::set_src(::google::protobuf::int32 value) {
  
  src_ = value;
  // @@protoc_insertion_point(field_set:pb.external.modify_channel.src)
}

// int32 dst = 6;
inline void modify_channel::clear_dst() {
  dst_ = 0;
}
inline ::google::protobuf::int32 modify_channel::dst() const {
  // @@protoc_insertion_point(field_get:pb.external.modify_channel.dst)
  return dst_;
}
inline void modify_channel::set_dst(::google::protobuf::int32 value) {
  
  dst_ = value;
  // @@protoc_insertion_point(field_set:pb.external.modify_channel.dst)
}

// int32 rslt = 7;
inline void modify_channel::clear_rslt() {
  rslt_ = 0;
}
inline ::google::protobuf::int32 modify_channel::rslt() const {
  // @@protoc_insertion_point(field_get:pb.external.modify_channel.rslt)
  return rslt_;
}
inline void modify_channel::set_rslt(::google::protobuf::int32 value) {
  
  rslt_ = value;
  // @@protoc_insertion_point(field_set:pb.external.modify_channel.rslt)
}

// -------------------------------------------------------------------

// info

// bytes data = 1;
inline void info::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& info::data() const {
  // @@protoc_insertion_point(field_get:pb.external.info.data)
  return data_.GetNoArena();
}
inline void info::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.external.info.data)
}
#if LANG_CXX11
inline void info::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.external.info.data)
}
#endif
inline void info::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.external.info.data)
}
inline void info::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.external.info.data)
}
inline ::std::string* info::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:pb.external.info.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* info::release_data() {
  // @@protoc_insertion_point(field_release:pb.external.info.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void info::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:pb.external.info.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace external
}  // namespace pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::external::modify_channel_rslt_type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::external::modify_channel_rslt_type>() {
  return ::pb::external::modify_channel_rslt_type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_external_2eproto
