// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: external.proto

#include "external.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace pb {
namespace external {
class modify_channelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<modify_channel>
      _instance;
} _modify_channel_default_instance_;
class infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<info>
      _instance;
} _info_default_instance_;
}  // namespace external
}  // namespace pb
namespace protobuf_external_2eproto {
static void InitDefaultsmodify_channel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::external::_modify_channel_default_instance_;
    new (ptr) ::pb::external::modify_channel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::external::modify_channel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_modify_channel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmodify_channel}, {}};

static void InitDefaultsinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::external::_info_default_instance_;
    new (ptr) ::pb::external::info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::external::info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsinfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_modify_channel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_info.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, vid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::modify_channel, rslt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::external::info, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::external::modify_channel)},
  { 12, -1, sizeof(::pb::external::info)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::external::_modify_channel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::external::_info_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "external.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016external.proto\022\013pb.external\"\323\001\n\016modify"
      "_channel\022\014\n\004type\030\001 \001(\005\022\013\n\003tid\030\002 \001(\005\022\013\n\003u"
      "id\030\003 \001(\005\022\013\n\003vid\030\004 \001(\005\022\013\n\003src\030\005 \001(\005\022\013\n\003ds"
      "t\030\006 \001(\005\022\014\n\004rslt\030\007 \001(\005\"d\n\trslt_type\022\r\n\trs"
      "lt_none\020\000\022\r\n\trslt_succ\020\001\022\r\n\trslt_fail\020\002\022"
      "\026\n\022rslt_already_exist\020\003\022\022\n\016rslt_not_exis"
      "t\020\004\"\024\n\004info\022\014\n\004data\030\001 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 273);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "external.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_external_2eproto
namespace pb {
namespace external {
const ::google::protobuf::EnumDescriptor* modify_channel_rslt_type_descriptor() {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_external_2eproto::file_level_enum_descriptors[0];
}
bool modify_channel_rslt_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const modify_channel_rslt_type modify_channel::rslt_none;
const modify_channel_rslt_type modify_channel::rslt_succ;
const modify_channel_rslt_type modify_channel::rslt_fail;
const modify_channel_rslt_type modify_channel::rslt_already_exist;
const modify_channel_rslt_type modify_channel::rslt_not_exist;
const modify_channel_rslt_type modify_channel::rslt_type_MIN;
const modify_channel_rslt_type modify_channel::rslt_type_MAX;
const int modify_channel::rslt_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void modify_channel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int modify_channel::kTypeFieldNumber;
const int modify_channel::kTidFieldNumber;
const int modify_channel::kUidFieldNumber;
const int modify_channel::kVidFieldNumber;
const int modify_channel::kSrcFieldNumber;
const int modify_channel::kDstFieldNumber;
const int modify_channel::kRsltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

modify_channel::modify_channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_external_2eproto::scc_info_modify_channel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.external.modify_channel)
}
modify_channel::modify_channel(const modify_channel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&rslt_) -
    reinterpret_cast<char*>(&type_)) + sizeof(rslt_));
  // @@protoc_insertion_point(copy_constructor:pb.external.modify_channel)
}

void modify_channel::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rslt_) -
      reinterpret_cast<char*>(&type_)) + sizeof(rslt_));
}

modify_channel::~modify_channel() {
  // @@protoc_insertion_point(destructor:pb.external.modify_channel)
  SharedDtor();
}

void modify_channel::SharedDtor() {
}

void modify_channel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* modify_channel::descriptor() {
  ::protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const modify_channel& modify_channel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_external_2eproto::scc_info_modify_channel.base);
  return *internal_default_instance();
}


void modify_channel::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.external.modify_channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rslt_) -
      reinterpret_cast<char*>(&type_)) + sizeof(rslt_));
  _internal_metadata_.Clear();
}

bool modify_channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.external.modify_channel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 src = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dst = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rslt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rslt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.external.modify_channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.external.modify_channel)
  return false;
#undef DO_
}

void modify_channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.external.modify_channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // int32 tid = 2;
  if (this->tid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tid(), output);
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->uid(), output);
  }

  // int32 vid = 4;
  if (this->vid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vid(), output);
  }

  // int32 src = 5;
  if (this->src() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->src(), output);
  }

  // int32 dst = 6;
  if (this->dst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dst(), output);
  }

  // int32 rslt = 7;
  if (this->rslt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->rslt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.external.modify_channel)
}

::google::protobuf::uint8* modify_channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.external.modify_channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // int32 tid = 2;
  if (this->tid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tid(), target);
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->uid(), target);
  }

  // int32 vid = 4;
  if (this->vid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vid(), target);
  }

  // int32 src = 5;
  if (this->src() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->src(), target);
  }

  // int32 dst = 6;
  if (this->dst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dst(), target);
  }

  // int32 rslt = 7;
  if (this->rslt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->rslt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.external.modify_channel)
  return target;
}

size_t modify_channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.external.modify_channel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 tid = 2;
  if (this->tid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tid());
  }

  // int32 uid = 3;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // int32 vid = 4;
  if (this->vid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vid());
  }

  // int32 src = 5;
  if (this->src() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src());
  }

  // int32 dst = 6;
  if (this->dst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst());
  }

  // int32 rslt = 7;
  if (this->rslt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rslt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void modify_channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.external.modify_channel)
  GOOGLE_DCHECK_NE(&from, this);
  const modify_channel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const modify_channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.external.modify_channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.external.modify_channel)
    MergeFrom(*source);
  }
}

void modify_channel::MergeFrom(const modify_channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.external.modify_channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.tid() != 0) {
    set_tid(from.tid());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.vid() != 0) {
    set_vid(from.vid());
  }
  if (from.src() != 0) {
    set_src(from.src());
  }
  if (from.dst() != 0) {
    set_dst(from.dst());
  }
  if (from.rslt() != 0) {
    set_rslt(from.rslt());
  }
}

void modify_channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.external.modify_channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void modify_channel::CopyFrom(const modify_channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.external.modify_channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool modify_channel::IsInitialized() const {
  return true;
}

void modify_channel::Swap(modify_channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void modify_channel::InternalSwap(modify_channel* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(tid_, other->tid_);
  swap(uid_, other->uid_);
  swap(vid_, other->vid_);
  swap(src_, other->src_);
  swap(dst_, other->dst_);
  swap(rslt_, other->rslt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata modify_channel::GetMetadata() const {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int info::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

info::info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_external_2eproto::scc_info_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.external.info)
}
info::info(const info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.external.info)
}

void info::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

info::~info() {
  // @@protoc_insertion_point(destructor:pb.external.info)
  SharedDtor();
}

void info::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* info::descriptor() {
  ::protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const info& info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_external_2eproto::scc_info_info.base);
  return *internal_default_instance();
}


void info::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.external.info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.external.info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.external.info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.external.info)
  return false;
#undef DO_
}

void info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.external.info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.external.info)
}

::google::protobuf::uint8* info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.external.info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.external.info)
  return target;
}

size_t info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.external.info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.external.info)
  GOOGLE_DCHECK_NE(&from, this);
  const info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.external.info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.external.info)
    MergeFrom(*source);
  }
}

void info::MergeFrom(const info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.external.info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.external.info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void info::CopyFrom(const info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.external.info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool info::IsInitialized() const {
  return true;
}

void info::Swap(info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void info::InternalSwap(info* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata info::GetMetadata() const {
  protobuf_external_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_external_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace external
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::external::modify_channel* Arena::CreateMaybeMessage< ::pb::external::modify_channel >(Arena* arena) {
  return Arena::CreateInternal< ::pb::external::modify_channel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::external::info* Arena::CreateMaybeMessage< ::pb::external::info >(Arena* arena) {
  return Arena::CreateInternal< ::pb::external::info >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
